---
title: "2. Revisión de la base de datos Hashtags"
author: "Santiago Sotelo"
date: 10/12/2022
execute: 
  echo: false
  message: false
  warning: false
---

```{r}
#| include: false
#| label: packages
pacman::p_load(tidyverse, rio, gt, here, janitor, fs, tidymodels, corrr)
here::i_am("2_exploracion.qmd")

```

## Objetivo

-   Realizar las técnicas disponibles en R que responden a la pregunta de investigación: *"El uso de Twitter durante la cuarentena del COVID-19: Entre la confrontación política y la resiliencia ciudadana"*
    -   Hipótesis: la necesidad de expresión se trasladó a Twitter dado que habían restricciones de movilidad en pandemia.
        -   En redes sociales hubo un movimiento tanto de apoyo mutuo-resiliencia como de discusión y erupción política.

```{r}
edges<- import("data/edges.xlsx") %>%
  select(-c(ur_ls_in_tweet, domains_in_tweet, relationship_date_utc, 
            tweet_date_utc, latitude, longitude)) %>%  # borrar variables innecesarias
  relocate(tipo, .after = source)

hashtags<- import("data/hashtags.xlsx") %>% 
  mutate(
    across(
      c(average_geodesic_distance,
      graph_density,
      average_betweenness_centrality,
      average_closeness_centrality,
      average_eigenvector_centrality),
      ~as.numeric(str_replace(., ",", ".")) #cambiar las comas por puntos y luego a numérica
    ),
    cuartiles_de_sentimiento_polaridad = ordered(as.factor(cuartiles_de_sentimiento_polaridad), 
                                                 levels = c("Muy Negativo", "Negativo", "Poco Negativo", 
                                                            "Neutro", "Poco Positivo", "Positivo", "Muy Positivo"))
  )

vertices<- import("data/vertices.xlsx") %>% 
  select(-c(x, y, custom_menu_item_text, web))

```

```{r}
#0----
graf0<- 
  hashtags %>%
  ggplot(aes(average_geodesic_distance, sentimiento_general_percent_percent)) +
  geom_point(aes(color = cuartiles_de_sentimiento_polaridad)) +
  geom_text(
    data = . %>% filter(average_geodesic_distance > 7 | sentimiento_general_percent_percent > 28 | sentimiento_general_percent_percent < -40),
    aes(label = hashtag),
    size = 2,
    vjust="inward",hjust="inward"
    ) +
  geom_smooth(method='lm') +
  scale_color_brewer(palette = "Dark2") +
  scale_y_continuous(labels = scales::percent_format(scale = 1, accuracy = 1)) +
  ggpubr::theme_pubr() +
  xlab("Average geodesic distance") +
  ylab("General sentiment percentage") +
  theme(
    legend.position = "bottom"
  ) + 
  guides(colour = guide_legend(title = "Polarity Sentiment Quartiles", title.position = "top", label.position = "bottom", nrow = 1))

#00----
graf00<- 
  hashtags %>%
  filter(graph_density < 0.03) %>%
  ggplot(aes(graph_density, sentimiento_general_percent_percent)) +
  geom_point(aes(color = cuartiles_de_sentimiento_polaridad)) +
  geom_text(
    data = . %>% filter(graph_density > 0.018 | sentimiento_general_percent_percent > 28 | sentimiento_general_percent_percent < -40),
    aes(label = hashtag),
    size = 2,
    vjust="inward",hjust="inward"
    ) +
  geom_smooth(method='lm') +
  scale_color_brewer(palette = "Dark2") +
  scale_y_continuous(labels = scales::percent_format(scale = 1, accuracy = 1)) +
  ggpubr::theme_pubr() +
  xlab("Graph density") +
  ylab("General sentiment percentage") +
  theme(
    legend.position = "bottom"
  ) + 
  guides(colour = guide_legend(title = "Polarity Sentiment Quartiles", title.position = "top", label.position = "bottom", nrow = 1))

graf00_out<- 
  hashtags %>% 
  ggplot(aes(graph_density, sentimiento_general_percent_percent)) +
  geom_point(aes(color = cuartiles_de_sentimiento_polaridad)) +
  geom_text(
    data = . %>% filter(graph_density > 0.03),
    aes(label = hashtag),
    size = 2,
    vjust="inward",hjust="inward"
    ) +
  geom_smooth(method='lm') +
  scale_color_brewer(palette = "Dark2") +
  scale_y_continuous(labels = scales::percent_format(scale = 1, accuracy = 1)) +
  ggpubr::theme_pubr() +
  xlab("Graph density") +
  ylab("General sentiment percentage") +
  theme(
    legend.position = "bottom"
  ) + 
  guides(colour = guide_legend(title = "Polarity Sentiment Quartiles", title.position = "top", label.position = "bottom", nrow = 1))

#1----
graf1<- 
  hashtags %>% 
  filter(average_betweenness_centrality < 800) %>% 
  ggplot(aes(average_betweenness_centrality, sentimiento_general_percent_percent)) +
  geom_point(aes(color = cuartiles_de_sentimiento_polaridad)) +
  geom_text(
    data = . %>% filter(average_betweenness_centrality > 600 | sentimiento_general_percent_percent > 28 | sentimiento_general_percent_percent < -40), 
    aes(label = hashtag), 
    size = 2,
    vjust="inward",hjust="inward"
    ) +
  geom_smooth(method='lm') +
  scale_color_brewer(palette = "Dark2") +
  scale_y_continuous(labels = scales::percent_format(scale = 1, accuracy = 1)) +
  ggpubr::theme_pubr() +
  xlab("Average betweeness centrality") +
  ylab("General sentiment percentage") +
  theme(
    legend.position = "bottom"
  ) + 
  guides(colour = guide_legend(title = "Polarity Sentiment Quartiles", title.position = "top", label.position = "bottom", nrow = 1))

graf1_out<-
  hashtags %>% 
  # filter(average_betweenness_centrality < 2000) %>% 
  ggplot(aes(average_betweenness_centrality, sentimiento_general_percent_percent)) +
  geom_point(aes(color = cuartiles_de_sentimiento_polaridad)) +
  geom_text(
    data = . %>% filter(average_betweenness_centrality > 800), 
    aes(label = hashtag), 
    size = 2,
    vjust="inward",hjust="inward"
    ) +
  geom_smooth(method='lm') +
  scale_color_brewer(palette = "Dark2") +
  scale_y_continuous(labels = scales::percent_format(scale = 1, accuracy = 1)) +
  ggpubr::theme_pubr() +
  xlab("Average betweeness centrality") +
  ylab("General sentiment percentage") +
  theme(
    legend.position = "bottom"
  ) + 
  guides(colour = guide_legend(title = "Polarity Sentiment Quartiles", title.position = "top", label.position = "bottom", nrow = 1))

#2-----
graf2<- 
  hashtags %>% 
  ggplot(aes(average_closeness_centrality, sentimiento_general_percent_percent)) +
  geom_point(aes(color = cuartiles_de_sentimiento_polaridad)) +
  geom_text(
    data = . %>% filter(average_closeness_centrality > 0.3 | sentimiento_general_percent_percent > 28 | sentimiento_general_percent_percent < -40), 
    aes(label = hashtag), 
    size = 2,
    vjust="outward",hjust="inward"
    ) +
  geom_smooth(method='lm') +
  scale_color_brewer(palette = "Dark2") +
  scale_y_continuous(labels = scales::percent_format(scale = 1, accuracy = 1)) +
  ggpubr::theme_pubr() +
  xlab("Average closeness centrality") +
  ylab("General sentiment percentage") +
  theme(
    legend.position = "bottom"
  ) + 
  guides(colour = guide_legend(title = "Polarity Sentiment Quartiles", title.position = "top", label.position = "bottom", nrow = 1))

#3----

graf3<- 
  hashtags %>% 
  filter(average_eigenvector_centrality < 0.12) %>% 
  ggplot(aes(average_eigenvector_centrality, sentimiento_general_percent_percent)) +
  geom_point(aes(color = cuartiles_de_sentimiento_polaridad)) +
  geom_text(
    data = . %>% filter(average_eigenvector_centrality > 0.09 | sentimiento_general_percent_percent > 28 | sentimiento_general_percent_percent < -40), 
    aes(label = hashtag), 
    size = 2,
    vjust="outward",hjust="inward"
    ) +
  geom_smooth(method='lm') +
  scale_color_brewer(palette = "Dark2") +
  scale_y_continuous(labels = scales::percent_format(scale = 1, accuracy = 1)) +
  ggpubr::theme_pubr() +
  xlab("Average eigenvector centrality") +
  ylab("General sentiment percentage") +
  theme(
    legend.position = "bottom"
  ) + 
  guides(colour = guide_legend(title = "Polarity Sentiment Quartiles", title.position = "top", label.position = "bottom", nrow = 1))

graf3_out<- 
  hashtags %>% 
  ggplot(aes(average_eigenvector_centrality, sentimiento_general_percent_percent)) +
  geom_point(aes(color = cuartiles_de_sentimiento_polaridad)) +
  geom_text(
    data = . %>% filter(average_eigenvector_centrality > 0.12), 
    aes(label = hashtag), 
    size = 2,
    vjust="outward",hjust="inward"
    ) +
  geom_smooth(method='lm') +
  scale_color_brewer(palette = "Dark2") +
  scale_y_continuous(labels = scales::percent_format(scale = 1, accuracy = 1)) +
  ggpubr::theme_pubr() +
  xlab("Average eigenvector centrality") +
  ylab("General sentiment percentage") +
  theme(
    legend.position = "bottom"
  ) + 
  guides(colour = guide_legend(title = "Polarity Sentiment Quartiles", title.position = "top", label.position = "bottom", nrow = 1))

```

<!-- Acá hacer un layout de todos los gráficos -->

```{r}
#| label: fig-corrr
#| fig-cap: Matriz de correlación

hashtags2<-
  hashtags %>% 
  select(where(is.numeric), -c(semana_de_recoleccion))

hash_cor<-
  hashtags2 %>% 
  corrr::correlate() %>% 
  # corrr::rearrange() %>% 
  corrr::shave()

rplot(hash_cor) + 
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))

```


## ¿Cómo interpretar una regresión lineal?

-   Constatar que el *p-value* es menor o igual a 0.05 (\*).

-   Revisar que el R² ajustado se encuentre cerca a 1. Mientras más cerca a uno, mayor será la variabilidad de la data.

## Average geodesic distance

***Average geodesic distance*** **o promedio de la distancia geodésica**: es el promedio del número de interacciones mínimas que un usuario tendrá que realizar para estar en contacto con cualquier otro usuario que también haya utilizado el hashtag.

```{r}
#| label: fig-graf0
#| fig-cap: 
#| - "Average geodesic distance (X) vs General sentiment percentage (Y)"
#| layout-nrow: 1
#| dpi: 600
#| fig-width: 7
#| fig-asp: 0.8

graf0

```

```{r}
#| column: screen-inset-right

lm(sentimiento_general_percent_percent ~ average_geodesic_distance, data = hashtags) %>% 
  summary()

```

-   *P-value* no es significativo.

-   R² ajustado es muy bajo.

## Graph density

***Graph density*** **o densidad del gráfico**: Es el número de interacciones reales que tienen los usuarios que utilizaron el Hashtag en relación al número de interacciones que ocurrirían si todos interactuaran entre sí. Se trata de una medida de cohesión entre los usuarios. A mayor densidad, habrá mayor calidad de vínculos y mayor flujo de información.

```{r}
#| label: fig-graf00
#| fig-cap: 
#| - "Graph density (X) vs General sentiment percentage (Y)"
#| - "Graph density (X) vs General sentiment percentage (Y) with outliers"
#| layout-nrow: 1
#| column: screen-inset
#| dpi: 600

graf00

graf00_out

```

```{r}
#| column: screen-inset-right

lm(sentimiento_general_percent_percent ~ graph_density, data = hashtags) %>% 
  summary()

```

-   *P-value* no es significativo.

-   R² ajustado es muy bajo.

## Average betweeness centrality

***Average betweeness centrality*** **o promedio de la centralidad de intermediación**: La capacidad de los usuarios que utilizaron el hashtag para servir como puente entre un usuario que busca información y otro capaz de ofrecerla. En este caso, el promedio alude entre los usuarios de su poder para controlar el flujo de la información.

```{r}
#| label: fig-graf1
#| fig-cap: 
#| - "Average betweeness centrality (X) vs General sentiment percentage (Y)"
#| - "Average betweeness centrality (X) vs General sentiment percentage (Y) with outliers"
#| layout-nrow: 1
#| column: screen-inset
#| dpi: 600

graf1

graf1_out

```

```{r}
#| column: screen-inset-right

lm(sentimiento_general_percent_percent ~ average_betweenness_centrality, data = hashtags %>% filter(average_betweenness_centrality < 800)) %>% 
  summary()

# summ(lmSent)
```

-   *P-value* no es significativo.

-   R² ajustado es muy bajo.

## Average closeness centrality

***Average closeness centrality*** **o promedio de la centralidad de la cercanía**: El nivel de implicación de los usuarios en torno al hashtag. También derivará en el tiempo que le toma a un usuario acceder a la información que se encuentra circulando. A mayor cercanía, mayor nivel de acceso a la información y mayor poder de influencia en la red.

```{r}
#| label: fig-graf2
#| fig-cap: 
#| - "Average closeness centrality (X) vs General sentiment percentage (Y)"
#| layout-nrow: 1
#| column: body
#| dpi: 600
#| fig-width: 7
#| fig-asp: 0.8

graf2 

```

```{r}
#| column: screen-inset-right

lm(sentimiento_general_percent_percent ~ average_closeness_centrality, data = hashtags) %>% 
  summary()

```

-   *P-value* no es significativo.

-   R² ajustado es muy bajo.

## Average eigenvector centrality

***Average eigenvector centrality*** **o promedio de la centralidad eigenvectorial**: El nivel en el que un usuario interactúa con otros usuarios que tienen buenas conexiones con la red del hashtag. En este sentido, va un paso más allá que en la medida de los grados.

```{r}
#| label: fig-graf3
#| fig-cap: 
#| - "Average eigenvector centrality (X) vs General sentiment percentage (Y)"
#| - "Average eigenvector centrality (X) vs General sentiment percentage (Y) with outliers"
#| layout-nrow: 1
#| column: screen-inset
#| dpi: 600

graf3

graf3_out

```

```{r}
#| column: screen-inset-right

lm(sentimiento_general_percent_percent ~ average_eigenvector_centrality, data = hashtags %>% filter(average_eigenvector_centrality < 0.12)) %>% 
  summary()

```

-   *P-value* no es significativo.

-   R² ajustado es muy bajo.

```{r}
#| label: notas
#| eval: false

hashtags %>% 
  select(average_betweenness_centrality, cuartiles_de_sentimiento_polaridad) %>% 
  GGally::ggpairs(aes(color = cuartiles_de_sentimiento_polaridad),
          columns = c("average_betweenness_centrality"))

hashtags %>% 
  select(average_betweenness_centrality, cuartiles_de_sentimiento_polaridad, sentimiento_general_percent_percent) %>% 
  GGally::ggpairs(aes(color = cuartiles_de_sentimiento_polaridad),
          columns = c("average_betweenness_centrality",
                      "sentimiento_general_percent_percent"
                      ))

sentimiento_general_percent_percent

```

## Cuadrantes estandarizados

Una posibilidad es estandarizar las variables de centralidad y densidad para ver cómo se relacionan estas variables. Sin embargo, el problema es que se tienen alrededor de 4-5 hashtags que tienen valores muy diferentes al promedio (outliers) y sesgan la estandarización (skewness). Se debería tomar alguna decisión acerca de estos hashtags.

-   Average geodistic distance
-   Graph density
-   Average betweeness centrality
-   Average closeness centrality
-   Average eigenvector centrality

### Average betweeness centrality vs. average closeness centrality

```{r}
#| label: fig-estandar1
#| fig-cap: X = average betweeness centrality, Y = average closeness centrality
#| fig-subcap: 
#| - Sin estandarización
#| - Con estandarización
#| layout-nrow: 1
#| column: screen-inset
#| dpi: 600

hashtags1<-
  hashtags %>% 
  mutate(
    across(c(average_geodesic_distance, graph_density, average_betweenness_centrality, average_closeness_centrality, average_eigenvector_centrality), .fns = list(scale = scale), .names = "{.col}_{.fn}")
  )

# sin estandar
hashtags %>%
  ggplot(aes(average_betweenness_centrality, average_closeness_centrality)) +
  geom_point(aes(color = cuartiles_de_sentimiento_polaridad)) +
  geom_text(
    data = . %>% filter(average_betweenness_centrality > 2500 | average_closeness_centrality > 0.22),
    aes(label = hashtag),
    size = 2,
    vjust="inward",hjust="inward",
    nudge_x = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0 ),
    nudge_y = c(0.005, 0, 0.005, 0.005, 0.005, 0.01, 0.01, 0.01, 0.015, 0 ,0 )
  ) +
  ylim(0, NA) +
  geom_smooth(method='lm') +
  scale_color_brewer(palette = "Dark2") +
  ggpubr::theme_pubr() +
  xlab("Average betweeness centrality") +
  ylab("Average closeness centrality") +
  theme(
    legend.position = "bottom"
  ) +
  guides(colour = guide_legend(title = "Polarity Sentiment Quartiles", title.position = "top", label.position = "bottom", nrow = 1))




# con estandar
hashtags1 %>%
  ggplot(aes(average_betweenness_centrality_scale, average_closeness_centrality_scale)) +
  geom_point(aes(color = cuartiles_de_sentimiento_polaridad)) +
  geom_text(
    data = . %>% filter(average_betweenness_centrality_scale > 2.5 | average_closeness_centrality_scale > 2 | average_closeness_centrality_scale < -1),
    aes(label = hashtag),
    size = 2,
    vjust="inward",hjust="inward",
    nudge_x = c(0, 0.2, 0, 0, 0, 0.7, 1.3, 0, 0, 0 ,0 ),
    nudge_y = c(0, 0.2, 0, 0, 0, -0.2, -0.2, 0,-0.2, -0.15 ,-0.3 )
  ) +
  geom_smooth(method='lm') +
  scale_color_brewer(palette = "Dark2") +
  ggpubr::theme_pubr() +
  xlab("Average betweeness centrality scale") +
  ylab("Average closeness centrality scale") +
  theme(
    legend.position = "bottom"
  ) +
  guides(colour = guide_legend(title = "Polarity Sentiment Quartiles", title.position = "top", label.position = "bottom", nrow = 1))




```

```{r}
#| eval: false
?scale

data<-
  data.frame(
    hombres = c(1200, 34567, 3456, 12, 3456, 0985, 1211),
    mujeres = c(1200, 34567, 3456, 12, 3456, 0985, 1211)
  )

rnorm(n=500) %>% 
  as.data.frame() %>% 
  rename(var=1) %>% 
  ggplot(aes(x=var)) +
  geom_density()


```

```{r}
#| eval: false

# averiguar método de mínimos y máximos
library(caret)

train = data.frame(a = 1:3, b = 10:12)
test = data.frame(a = 1:6, b = 7:12)

pp = preProcess(train, method = "range")


predict(pp, train)

#     a   b
# 1 0.0 0.0
# 2 0.5 0.5
# 3 1.0 1.0

predict(pp, test)

#     a    b
# 1 0.0 -1.5
# 2 0.5 -1.0
# 3 1.0 -0.5
# 4 1.5  0.0
# 5 2.0  0.5
# 6 2.5  1.0

```

